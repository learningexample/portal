FROM python:3.12-slim

WORKDIR /app

# Minimal system dependencies for testing
RUN apt-get update && apt-get install -y --no-install-recommends \
    procps \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy the rest of the application
COPY . .

# Set environment variables
ENV PORT=8050
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV TEST_MODE=true

# Create start script with minimal workers for testing
RUN echo '#!/bin/bash\n\
# Use minimal workers for testing\n\
WORKERS=1\n\
THREADS=1\n\
\n\
if [ "$PORTAL_VERSION" = "tabbed" ]; then\n\
  APP_MODULE="app_bytab:server"\n\
elif [ "$PORTAL_VERSION" = "bysection" ]; then\n\
  APP_MODULE="app-bysection:server"\n\
elif [ "$PORTAL_VERSION" = "appstore" ]; then\n\
  APP_MODULE="app_store:server"\n\
else\n\
  APP_MODULE="app:server"\n\
fi\n\
\n\
echo "Starting test server with $WORKERS worker for $APP_MODULE"\n\
exec gunicorn --workers=$WORKERS --threads=$THREADS \\\n\
    --bind=0.0.0.0:$PORT \\\n\
    --forwarded-allow-ips="*" \\\n\
    --log-level=debug \\\n\
    --timeout=60 \\\n\
    --access-logfile=- \\\n\
    --error-logfile=- \\\n\
    --reload \\\n\
    $APP_MODULE\n' > /app/start_test.sh \
    && chmod +x /app/start_test.sh

# Create lightweight healthcheck script for testing
RUN echo '#!/bin/bash\n\
curl --silent --fail http://localhost:$PORT/_dash-layout || exit 1\n' > /app/healthcheck.sh \
    && chmod +x /app/healthcheck.sh

# Set up healthcheck with faster interval for testing
HEALTHCHECK --interval=10s --timeout=5s --start-period=5s --retries=2 CMD [ "/app/healthcheck.sh" ]

# Expose the port the app runs on
EXPOSE 8050

# Command to run the application in test mode
CMD ["/app/start_test.sh"]